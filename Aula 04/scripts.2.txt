
select 
*
from usuarios
inner join telefones on telefones.usuario_id = usuarios.id;
-- o inner é um tipo de relacionamento restrito onde os valores comparados
--devem existir em ambas tabelas (se não houver não exibe essa linha)

-- o left join é um tipo de relacionamento menos restritivo 
-- onde basta existir dados na tabela principal dessa forma os dados da tabela secundária
-- ficarão nulos (mas os resultados são exibidos em linha)

select 
    usu.nome as usuario,
    usu.email as "e-mail",
    usu.senha as password,
    tel.tipo as type,
    tel.numero_completo as number
from usuarios as usu
    left join telefones as tel on tel.usuario_id = usu.id
where
tel.numero_completo like "%70%"
and tel.numero_completo like "%03"
;


--criar 2 tabelas
--1ª tabela SERIES com os campos
-- ID bla bla bla
-- nome ...
-- ano ...
-- genero ...
-- diretor ...

create table series (
id integer primary key autoincrement unique,
nome text not null,
ano integer not null,
genero text,
diretor text
);


--2ª tabela ESPISODIOS
-- ID bla bla bla
-- titulo  obrigatorio
-- sequencia obrigatorio
-- descricao 
-- serie_id

create table episodios (
id integer primary key autoincrement unique,
titulo text not null,
sequencia integer not null,
descricao text,
serie_id integer references series(id)
);


----------------------------------------------------


select * from series;

insert into series (nome,ano,genero,diretor) values ("Vikins","2019","Ação","Michael");
insert into series (nome,ano,diretor) values ("La casa de Papel","2019","Professor");
insert into series (nome,ano,genero) values ("The witcher","2020","Fantasia");
insert into series (nome,ano,genero) values ("One piece","1997","Anime");
insert into series (nome,ano,genero) values ("Bleach","2017","Anime");
insert into series (nome,ano,genero) values ("Naruto","2002","Anime");
insert into series (nome,ano,genero) values ("The boys","2020","Ação");

select count (*) from series 
where
ano = 2019;

select genero,count(*) from series
group by genero
;

select * from series;
select * from episodios;

-- id 2 em SERIES é La casa de Papel

--insert into episodios (serie_id,titulo,sequencia,descricao)
--values (2,"Fim da Estrada",3,"Quase pegam o professor mas ele é o principal");

--- as renomeia a tabela principal (ex: serie = se) 
select * from series as se
inner join episodios as ep on ep.serie_id = se.id
where se.id = 2 
order by ep.sequencia desc; -- desc ou asc

;

--select * from series as se
--left join episodios as ep on ep .serie_id = se.id


select * from series as se 
left join episodios as ep on ep.serie_id = se.id
;

select * from series as se 
left join episodios as ep on ep.serie_id = se.id
order by se.nome,ep.sequencia asc
;

-- para fazer contagens ou (agrupadores) é necessario informar quais campos se repetem
-- e esses campos devem ser os unicos presentes no select 
-- os demais campos são os de agrupamento como (count,sum)
-- os campos mencionado no select devem existir no group by
select 
se.nome,
count(*)
from series as se
left join episodios as ep on ep.serie_id = se.id
group by se.nome;

-- para consultas com contagem ou agrupadores não devo usar LEFT pois
-- sempre que falta o relacionamento é gerado no minimo uma linha vazia 
-- que não configura relacionamento 
-- LEFT aparece todos INNER apenas uma opção 


